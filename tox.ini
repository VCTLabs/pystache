[tox]
envlist = py{36,37,38,39,310}-{linux,macos,windows}
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-18.04: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
passenv = CI PYTHON PYTHONIOENCODING
allowlist_externals = bash

deps =
    pip>=20.0.1
    .[test,cov]

commands =
    #nosetests -sx . {posargs}
    python -m pytest . --capture=no --doctest-modules --doctest-glob="*.rst" --doctest-glob="*.py" --cov pystache --cov-branch --cov-report term-missing
    coverage xml
    bash -c './gh/fix_pkg_name.sh'

[testenv:bare]
# Change the working directory so that we don't import the pystache located
# in the original location.
deps =
    pip>=20.0.1
    -e .

changedir =
    {envbindir}

commands =
    pystache-test

[testenv:bench]
passenv = CI PYTHON PYTHONIOENCODING

deps =
    pip>=20.0.1
    # uncomment for comparison, posargs expects a number, eg, 10000
    #chevron

commands_pre =
    pip install .

commands =
    python pystache/tests/benchmark.py {posargs}

[testenv:setup]
passenv = CI PYTHON PYTHONIOENCODING

deps =
    pip>=20.0.1
    pyyaml

# this is becoming even more deprecated (possibly failing) BUT,
# to run the spec tests, first init the git submodule, and then run
# something like: tox -e setup ext/spec/specs
commands =
    python -m pip install .
    pystache-test {toxinidir} {posargs}

[testenv:lint]
# oddly, this produces different results than running the same pylint
# command from a shell prompt WTF? unknown cause
#  pylint pystache/  =>  8.27/10
#  tox -e lint       =>  8.06/10

passenv = CI PYTHON PYTHONIOENCODING

deps =
    pip>=20.0.1
    pylint

commands =
    pylint --rcfile={toxinidir}/.pylintrc --fail-under=8.10 pystache/

[testenv:style]
passenv = CI PYTHON PYTHONIOENCODING

deps =
    pip>=20.0.1
    flake8

commands =
    flake8 pystache/

[testenv:deploy]
passenv = CI PYTHON PYTHONIOENCODING
allowlist_externals = bash

deps =
    pip>=19.0.1
    wheel
    build
    twine

commands =
    python -m build .
    twine check dist/*

[testenv:check]
passenv = CI PYTHON PYTHONIOENCODING
skip_install = true

allowlist_externals = bash

deps =
    pip>=20.0.1

commands =
    bash -c 'export WHL_FILE=$(ls dist/*.whl); \
        python -m pip install $WHL_FILE'
    pystache-test

[testenv:sec]
passenv = CI PYTHON PYTHONIOENCODING
skip_install = true

deps =
    pip>=20.0.1
    bandit

commands =
    bandit -r pystache/ -x pystache/tests
    #bandit -r pystache/

[testenv:docs]
passenv = CI PYTHON PYTHONIOENCODING
allowlist_externals = bash

deps =
    pip>=19.0.1
    wheel
    docutils
    # apt/emerge pandoc first

commands =
    python setup.py prep
    bash -c 'python setup.py --long-description | rst2html.py -v --no-raw > out.html'
